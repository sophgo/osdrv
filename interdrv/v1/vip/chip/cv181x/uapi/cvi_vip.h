/*
 * Copyright (C) Cvitek Co., Ltd. 2019-2020. All rights reserved.
 *
 * File Name: cvi_vip.h
 * Description:
 */

#ifndef _U_CVI_VIP_H_
#define _U_CVI_VIP_H_
#include <linux/version.h>

#ifdef __cplusplus
extern "C" {
#endif

/*      Pixel format         FOURCC                          depth  Description  */
#define V4L2_PIX_FMT_RGBM   v4l2_fourcc('R', 'G', 'B', 'M') // 24  RGB-8-8-8 planar
/* HSV formats */
#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 10, 0)
#define V4L2_PIX_FMT_HSV24  v4l2_fourcc('H', 'S', 'V', '3')
#endif
#define V4L2_PIX_FMT_HSVM   v4l2_fourcc('H', 'M', '2', '4')

/* User-class control IDs */
#define V4L2_CID_DV_VIP_BASE                    (V4L2_CTRL_CLASS_DV | 0x2000)

#define V4L2_CID_DV_VIP_QBUF                    (V4L2_CID_DV_VIP_BASE + 0x509)

#define V4L2_CID_DV_VIP_DWA_BASE                (V4L2_CID_DV_VIP_BASE | 0x000)
#define V4L2_CID_DV_VIP_DWA_SET_MESH            (V4L2_CID_DV_VIP_DWA_BASE + 0)
#define V4L2_CID_DV_VIP_DWA_SET_OUTPUT          (V4L2_CID_DV_VIP_DWA_BASE + 1)
#define V4L2_CID_DV_VIP_DWA_SET_BGCOLOR         (V4L2_CID_DV_VIP_DWA_BASE + 2)
#define V4L2_CID_DV_VIP_DWA_SET_ALIGN           (V4L2_CID_DV_VIP_DWA_BASE + 3)
#define V4L2_CID_DV_VIP_DWA_SET_OP              (V4L2_CID_DV_VIP_DWA_BASE + 4)

#define V4L2_CID_DV_VIP_IMG_BASE                (V4L2_CID_DV_VIP_BASE | 0x100)
#define V4L2_CID_DV_VIP_IMG_INTR                (V4L2_CID_DV_VIP_IMG_BASE + 0)
#define V4L2_CID_DV_VIP_IMG_SET_ALIGN           (V4L2_CID_DV_VIP_IMG_BASE + 1)
#define V4L2_CID_DV_VIP_IMG_SET_CUSTOM_CSC      (V4L2_CID_DV_VIP_IMG_BASE + 2)
#define V4L2_CID_DV_VIP_IMG_SET_VPSS_GRP_CFG    (V4L2_CID_DV_VIP_IMG_BASE + 3)
#define V4L2_CID_DV_VIP_IMG_TRIGGER_RGNEX       (V4L2_CID_DV_VIP_IMG_BASE + 4)
#define V4L2_CID_DV_VIP_IMG_RGNEX_DONE          (V4L2_CID_DV_VIP_IMG_BASE + 5)
#define V4L2_CID_DV_VIP_IMG_RGNEX_RESET         (V4L2_CID_DV_VIP_IMG_BASE + 6)

#define V4L2_CID_DV_VIP_SC_BASE                 (V4L2_CID_DV_VIP_BASE | 0x200)
#define V4L2_CID_DV_VIP_SC_SET_SC_D_SRC_TO_V    (V4L2_CID_DV_VIP_SC_BASE + 0)
#define V4L2_CID_DV_VIP_SC_SET_FLIP             (V4L2_CID_DV_VIP_SC_BASE + 1)
#define V4L2_CID_DV_VIP_SC_SET_QUANT            (V4L2_CID_DV_VIP_SC_BASE + 2)
#define V4L2_CID_DV_VIP_SC_SET_BORDER           (V4L2_CID_DV_VIP_SC_BASE + 3)
#define V4L2_CID_DV_VIP_SC_SET_ALIGN            (V4L2_CID_DV_VIP_SC_BASE + 4)
#define V4L2_CID_DV_VIP_SC_SET_RGN              (V4L2_CID_DV_VIP_SC_BASE + 5)
#define V4L2_CID_DV_VIP_SC_SET_COEF             (V4L2_CID_DV_VIP_SC_BASE + 6)
#define V4L2_CID_DV_VIP_SC_SET_CUSTOM_CSC       (V4L2_CID_DV_VIP_SC_BASE + 7)
#define V4L2_CID_DV_VIP_SC_SET_VPSS_CHN_CFG     (V4L2_CID_DV_VIP_SC_BASE + 8)
#define V4L2_CID_DV_VIP_SC_SET_BIND_FB          (V4L2_CID_DV_VIP_SC_BASE + 9)

#define V4L2_CID_DV_VIP_DISP_BASE               (V4L2_CID_DV_VIP_BASE | 0x300)
#define V4L2_CID_DV_VIP_DISP_VB_DONE            (V4L2_CID_DV_VIP_DISP_BASE + 0)
#define V4L2_CID_DV_VIP_DISP_INTR               (V4L2_CID_DV_VIP_DISP_BASE + 1)
#define V4L2_CID_DV_VIP_DISP_OUT_CSC            (V4L2_CID_DV_VIP_DISP_BASE + 2)
#define V4L2_CID_DV_VIP_DISP_PATTERN            (V4L2_CID_DV_VIP_DISP_BASE + 3)
#define V4L2_CID_DV_VIP_DISP_FRAME_BGCOLOR      (V4L2_CID_DV_VIP_DISP_BASE + 4)
#define V4L2_CID_DV_VIP_DISP_WINDOW_BGCOLOR     (V4L2_CID_DV_VIP_DISP_BASE + 5)
#define V4L2_CID_DV_VIP_DISP_ONLINE             (V4L2_CID_DV_VIP_DISP_BASE + 6)
#define V4L2_CID_DV_VIP_DISP_INTF               (V4L2_CID_DV_VIP_DISP_BASE + 7)
#define V4L2_CID_DV_VIP_DISP_ENABLE_WIN_BGCOLOR (V4L2_CID_DV_VIP_DISP_BASE + 8)
#define V4L2_CID_DV_VIP_DISP_SET_ALIGN          (V4L2_CID_DV_VIP_DISP_BASE + 9)
#define V4L2_CID_DV_VIP_DISP_SET_RGN            (V4L2_CID_DV_VIP_DISP_BASE + 10)
#define V4L2_CID_DV_VIP_DISP_SET_CUSTOM_CSC     (V4L2_CID_DV_VIP_DISP_BASE + 11)
#define V4L2_CID_DV_VIP_DISP_I80_SW_MODE        (V4L2_CID_DV_VIP_DISP_BASE + 12)
#define V4L2_CID_DV_VIP_DISP_I80_CMD            (V4L2_CID_DV_VIP_DISP_BASE + 13)
#define V4L2_CID_DV_VIP_DISP_SET_CLK            (V4L2_CID_DV_VIP_DISP_BASE + 14)
#define V4L2_CID_DV_VIP_DISP_GET_VLAYER_SIZE    (V4L2_CID_DV_VIP_DISP_BASE + 15)
#define V4L2_CID_DV_VIP_DISP_GET_PANEL_STATUS   (V4L2_CID_DV_VIP_DISP_BASE + 16)
#define V4L2_CID_DV_VIP_DISP_GET_INTF_TYPE      (V4L2_CID_DV_VIP_DISP_BASE + 17)
#define V4L2_CID_DV_VIP_DISP_GAMMA_LUT_UPDATE   (V4L2_CID_DV_VIP_DISP_BASE + 18)
#define V4L2_CID_DV_VIP_DISP_GAMMA_LUT_READ     (V4L2_CID_DV_VIP_DISP_BASE + 19)

enum V4L2_CID_DV_VIP_ISP {
	V4L2_CID_DV_VIP_ISP_BASE = (V4L2_CID_DV_VIP_BASE | 0x400),
	V4L2_CID_DV_VIP_ISP_PATTERN = V4L2_CID_DV_VIP_ISP_BASE,
	V4L2_CID_DV_VIP_ISP_ONLINE,
	V4L2_CID_DV_VIP_ISP_HDR,
	V4L2_CID_DV_VIP_ISP_3DNR,
	V4L2_CID_DV_VIP_ISP_TILE,
	V4L2_CID_DV_VIP_ISP_COMPRESS_EN,
	V4L2_CID_DV_VIP_ISP_STS_MEM,
	V4L2_CID_DV_VIP_ISP_WBG_CFG,
	V4L2_CID_DV_VIP_ISP_BLC_CFG,
	V4L2_CID_DV_VIP_ISP_CCM_CFG,
	V4L2_CID_DV_VIP_ISP_DHZ_CFG,
	V4L2_CID_DV_VIP_ISP_STS_GET,
	V4L2_CID_DV_VIP_ISP_STS_PUT,
	V4L2_CID_DV_VIP_ISP_POST_STS_GET,
	V4L2_CID_DV_VIP_ISP_POST_STS_PUT,
	V4L2_CID_DV_VIP_ISP_GE_CFG,
	V4L2_CID_DV_VIP_ISP_GAMMA_CFG,
	V4L2_CID_DV_VIP_ISP_EE_CFG,
	V4L2_CID_DV_VIP_ISP_USR_PIC_CFG,
	V4L2_CID_DV_VIP_ISP_USR_PIC_ONOFF,
	V4L2_CID_DV_VIP_ISP_USR_PIC_PUT,
	V4L2_CID_DV_VIP_ISP_BNR_CFG,
	V4L2_CID_DV_VIP_ISP_CNR_CFG,
	V4L2_CID_DV_VIP_ISP_YNR_CFG,
	V4L2_CID_DV_VIP_ISP_PFC_CFG,
	V4L2_CID_DV_VIP_ISP_TNR_CFG,
	V4L2_CID_DV_VIP_ISP_DCI_CFG,
	V4L2_CID_DV_VIP_ISP_DEMOSIAC_CFG,
	V4L2_CID_DV_VIP_ISP_3DLUT_CFG,
	V4L2_CID_DV_VIP_ISP_DPC_CFG,
	V4L2_CID_DV_VIP_ISP_LSC_CFG,
	V4L2_CID_DV_VIP_ISP_LSCR_CFG,
	V4L2_CID_DV_VIP_ISP_AE_CFG,
	V4L2_CID_DV_VIP_ISP_AWB_CFG,
	V4L2_CID_DV_VIP_ISP_AF_CFG,
	V4L2_CID_DV_VIP_ISP_FSWDR_CFG,
	V4L2_CID_DV_VIP_ISP_DRC_CFG,
	V4L2_CID_DV_VIP_ISP_MONO_CFG,
	V4L2_CID_DV_VIP_ISP_USR_PIC_TIMING,
	V4L2_CID_DV_VIP_ISP_GET_LSC_PHY_BUF,
	V4L2_CID_DV_VIP_ISP_CSIBDG_CFG,
	V4L2_CID_DV_VIP_ISP_GET_TUN_ADDR,
	V4L2_CID_DV_VIP_ISP_SET_SNR_INFO,
	V4L2_CID_DV_VIP_ISP_SET_SNR_CFG_NODE,
	V4L2_CID_DV_VIP_ISP_GET_PIPE_DUMP,
	V4L2_CID_DV_VIP_ISP_PUT_PIPE_DUMP,
	V4L2_CID_DV_VIP_ISP_SET_RGBMAP_IDX,
	V4L2_CID_DV_VIP_ISP_HDR_DETAIL_EN,
	V4L2_CID_DV_VIP_ISP_YUV_BYPASS_PATH,
	V4L2_CID_DV_VIP_ISP_BE_ONLINE,
	V4L2_CID_DV_VIP_ISP_SUBLVDS_PATH,
	V4L2_CID_DV_VIP_ISP_GET_IP_INFO,
	V4L2_CID_DV_VIP_ISP_TRIG_PRERAW,
	V4L2_CID_DV_VIP_ISP_SET_PROC_CONTENT,
	V4L2_CID_DV_VIP_ISP_SC_ONLINE,
	V4L2_CID_DV_VIP_ISP_MMAP_GRID_SIZE,
	V4L2_CID_DV_VIP_ISP_RGBIR,
	V4L2_CID_DV_VIP_ISP_AWB_STS_GET,
	V4L2_CID_DV_VIP_ISP_AWB_STS_PUT,
	V4L2_CID_DV_VIP_ISP_GET_FSWDR_PHY_BUF,
	V4L2_CID_DV_VIP_ISP_GET_SCENE_INFO,
	V4L2_CID_DV_VIP_ISP_CLK_CTRL,
	V4L2_CID_DV_VIP_ISP_GET_BUF_SIZE,
	V4L2_CID_DV_VIP_ISP_SET_DMA_BUF_INFO,
};

/*
 * Events
 *
 * V4L2_EVENT_CVI_VIP_PRE0_SOF: preraw0's start of frame
 * V4L2_EVENT_CVI_VIP_PRE1_SOF: preraw1's start of frame
 * V4L2_EVENT_CVI_VIP_PRE0_EOF: preraw0's end of frame
 * V4L2_EVENT_CVI_VIP_PRE1_EOF: preraw1's end of frame
 * V4L2_EVENT_CVI_VIP_POST_EOF: postraw's end of frame
 */

#define V4L2_EVENT_CVI_VIP_CLASS		(V4L2_EVENT_PRIVATE_START | 0x100)
#define V4L2_EVENT_CVI_VIP_PRE0_SOF		(V4L2_EVENT_CVI_VIP_CLASS | 0x1)
#define V4L2_EVENT_CVI_VIP_PRE1_SOF		(V4L2_EVENT_CVI_VIP_CLASS | 0x2)
#define V4L2_EVENT_CVI_VIP_PRE0_EOF		(V4L2_EVENT_CVI_VIP_CLASS | 0x3)
#define V4L2_EVENT_CVI_VIP_PRE1_EOF		(V4L2_EVENT_CVI_VIP_CLASS | 0x4)
#define V4L2_EVENT_CVI_VIP_POST_EOF		(V4L2_EVENT_CVI_VIP_CLASS | 0x5)
#define V4L2_EVENT_CVI_VIP_POST1_EOF		(V4L2_EVENT_CVI_VIP_CLASS | 0x6)
#define V4L2_EVENT_CVI_VIP_PRE0_TUN_IDX		(V4L2_EVENT_CVI_VIP_CLASS | 0x7)
#define V4L2_EVENT_CVI_VIP_PRE1_TUN_IDX		(V4L2_EVENT_CVI_VIP_CLASS | 0x8)
#define V4L2_EVENT_CVI_VIP_POST_TUN_IDX		(V4L2_EVENT_CVI_VIP_CLASS | 0x9)
#define V4L2_EVENT_CVI_VIP_POST1_TUN_IDX	(V4L2_EVENT_CVI_VIP_CLASS | 0xA)
#define V4L2_EVENT_CVI_VIP_ISP_PROC_READ	(V4L2_EVENT_CVI_VIP_CLASS | 0xB)
#define V4L2_EVENT_CVI_VIP_AWB0_DONE		(V4L2_EVENT_CVI_VIP_CLASS | 0xC)
#define V4L2_EVENT_CVI_VIP_AWB1_DONE		(V4L2_EVENT_CVI_VIP_CLASS | 0xD)
#define V4L2_EVENT_CVI_VIP_VPSS_EOF			(V4L2_EVENT_CVI_VIP_CLASS | 0x20)
#define V4L2_EVENT_CVI_VIP_VPSS_CMDQ_DONE	(V4L2_EVENT_CVI_VIP_CLASS | 0x21)


#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 10, 0)
enum v4l2_hsv_encoding {
	/* Hue mapped to 0 - 179 */
	V4L2_HSV_ENC_180        = 128,
	/* Hue mapped to 0-255 */
	V4L2_HSV_ENC_256        = 129,
};
#endif

enum cvi_vip_pattern {
	CVI_VIP_PAT_OFF = 0,
	CVI_VIP_PAT_SNOW,
	CVI_VIP_PAT_AUTO,
	CVI_VIP_PAT_RED,
	CVI_VIP_PAT_GREEN,
	CVI_VIP_PAT_BLUE,
	CVI_VIP_PAT_COLORBAR,
	CVI_VIP_PAT_GRAY_GRAD_H,
	CVI_VIP_PAT_GRAY_GRAD_V,
	CVI_VIP_PAT_BLACK,
	CVI_VIP_PAT_MAX,
};

enum cvi_rgn_format {
	CVI_RGN_FMT_ARGB8888,
	CVI_RGN_FMT_ARGB4444,
	CVI_RGN_FMT_ARGB1555,
	CVI_RGN_FMT_256LUT,
	CVI_RGN_FMT_FONT,
	CVI_RGN_FMT_MAX
};

struct cvi_rgn_param {
	enum cvi_rgn_format fmt;
	struct v4l2_rect rect;
	__u32 stride;
	__u64 phy_addr;
};

struct cvi_rgn_cfg {
	struct cvi_rgn_param param[8];
	__u8 num_of_rgn;
	bool hscale_x2;
	bool vscale_x2;
	bool colorkey_en;
	__u32 colorkey;
};

struct cvi_rgn_ex_cfg {
	struct cvi_rgn_param rgn_ex_param[32];
	__u8 num_of_rgn_ex;
	bool hscale_x2;
	bool vscale_x2;
	bool colorkey_en;
	__u32 colorkey;
};

struct cvi_csc_cfg {
	__u16 coef[3][3];
	__u8 sub[3];
	__u8 add[3];
};

enum cvi_input_type {
	CVI_VIP_INPUT_ISP = 0,
	CVI_VIP_INPUT_DWA,
	CVI_VIP_INPUT_MEM,
	CVI_VIP_INPUT_ISP_POST,
	CVI_VIP_INPUT_MAX,
};

struct cvi_vpss_grp_cfg {
	__u8 grp_id;
	bool chn_enable[4];
	struct v4l2_frmsize_discrete src_size;
	__u32 pixelformat;
	__u32 bytesperline[2];
	struct v4l2_rect crop;
	struct cvi_csc_cfg csc_cfg;
};

struct cvi_vpss_rgnex_cfg {
	struct cvi_rgn_ex_cfg cfg;
	__u32 pixelformat;
	__u32 bytesperline[2];
	__u64 addr[3];
};

struct cvi_vip_plane {
	__u32 length;
	__u64 addr;
};

/*
 * @index:
 * @length: length of planes
 * @planes: to describe buf
 * @reserved
 */
struct cvi_vip_buffer2 {
	__u32 index;
	__u32 length;
	struct cvi_vip_plane planes[3];
	__u32 reserved;
};

#ifdef __cplusplus
}
#endif

#endif /* _U_CVI_VIP_H_ */
